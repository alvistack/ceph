diff --git a/src/common/Cycles.h b/src/common/Cycles.h
index b546479c2b3..8ffc6455ae6 100644
--- a/src/common/Cycles.h
+++ b/src/common/Cycles.h
@@ -29,8 +29,9 @@
  */
 
 
-#ifndef CEPH_CYCLES_H
-#define CEPH_CYCLES_H
+#pragma once
+
+#include <cstdint>
 
 #include <cstdint>
 
@@ -114,4 +115,3 @@ private:
   }
 };
 
-#endif  // CEPH_CYCLES_H
diff --git a/src/common/subsys_types.h b/src/common/subsys_types.h
index bd7cc439e8d..6f8fd01a565 100644
--- a/src/common/subsys_types.h
+++ b/src/common/subsys_types.h
@@ -54,7 +54,7 @@ ceph_subsys_get_as_array() {
 #undef DEFAULT_SUBSYS
 }
 
-constexpr static std::uint8_t
+constexpr static uint8_t
 ceph_subsys_get_max_default_level(const std::size_t subidx) {
   const auto item = ceph_subsys_get_as_array()[subidx];
   return std::max(item.log_level, item.gather_level);
diff --git a/src/include/ceph_features.h b/src/include/ceph_features.h
index 794e10efd7a..2715d3df8fd 100644
--- a/src/include/ceph_features.h
+++ b/src/include/ceph_features.h
@@ -2,6 +2,7 @@
 #define __CEPH_FEATURES
 
 #include "sys/types.h"
+#include <cstdint>
 
 /*
  * Each time we reclaim bits for reuse we need to specify another
diff --git a/src/librbd/api/PoolMetadata.h b/src/librbd/api/PoolMetadata.h
index 69ab574ac75..5b3402dddfd 100644
--- a/src/librbd/api/PoolMetadata.h
+++ b/src/librbd/api/PoolMetadata.h
@@ -10,6 +10,7 @@
 #include <cstdint>
 #include <map>
 #include <string>
+#include <cstdint>
 
 namespace librbd {
 
diff --git a/src/msg/async/compression_onwire.h b/src/msg/async/compression_onwire.h
index d3b35a4655c..d71f29a0fdb 100644
--- a/src/msg/async/compression_onwire.h
+++ b/src/msg/async/compression_onwire.h
@@ -45,7 +45,7 @@ namespace ceph::compression::onwire {
 
   class TxHandler final : private Handler {
   public:
-    TxHandler(CephContext* const cct, CompressorRef compressor, int mode, std::uint64_t min_size)
+    TxHandler(CephContext* const cct, CompressorRef compressor, int mode, uint64_t min_size)
       : Handler(cct, compressor),
 	m_min_size(min_size),
 	m_mode(static_cast<Compressor::CompressionMode>(mode))
@@ -98,7 +98,7 @@ namespace ceph::compression::onwire {
     static rxtx_t create_handler_pair(
       CephContext* ctx,
       const CompConnectionMeta& comp_meta,
-      std::uint64_t compress_min_size);
+      uint64_t compress_min_size);
   };
 }
 
diff --git a/src/msg/async/crypto_onwire.h b/src/msg/async/crypto_onwire.h
index 55f7550868f..2213c21d08d 100644
--- a/src/msg/async/crypto_onwire.h
+++ b/src/msg/async/crypto_onwire.h
@@ -95,7 +95,7 @@ public:
   // Transmitter can append extra bytes of ciphertext at the -final step.
   // This method return how much was added, and thus let client translate
   // plaintext size into ciphertext size to grab from wire.
-  virtual std::uint32_t get_extra_size_at_final() = 0;
+  virtual uint32_t get_extra_size_at_final() = 0;
 
   // Instance of RxHandler must be reset before doing any decrypt-update
   // step. This applies also to situation when decrypt-final was already
diff --git a/src/test/librados/op_speed.cc b/src/test/librados/op_speed.cc
index 849a6566f2d..53952bd1b5f 100644
--- a/src/test/librados/op_speed.cc
+++ b/src/test/librados/op_speed.cc
@@ -11,7 +11,7 @@ int main() {
   for (int i = 0; i < to_create; ++i) {
     librados::ObjectReadOperation op;
     bufferlist bl;
-    std::uint64_t sz;
+    uint64_t sz;
     struct timespec tm;
     std::map<std::string, ceph::buffer::list> xattrs;
     std::map<std::string, ceph::buffer::list> omap;
diff --git a/src/test/mon/test_log_rss_usage.cc b/src/test/mon/test_log_rss_usage.cc
index b8ca3012ab7..4a29a7dfab2 100644
--- a/src/test/mon/test_log_rss_usage.cc
+++ b/src/test/mon/test_log_rss_usage.cc
@@ -6,6 +6,7 @@
 #include <string>
 #include <iostream>
 #include <fstream>
+#include <cstdint>
 #include <stdlib.h>
 #include <stdio.h>
 #include <unistd.h>
