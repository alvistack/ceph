--- a/src/common/subsys_types.h
+++ b/src/common/subsys_types.h
@@ -53,7 +53,7 @@ ceph_subsys_get_as_array() {
 #undef DEFAULT_SUBSYS
 }
 
-constexpr static std::uint8_t
+constexpr static uint8_t
 ceph_subsys_get_max_default_level(const std::size_t subidx) {
   const auto item = ceph_subsys_get_as_array()[subidx];
   return std::max(item.log_level, item.gather_level);
--- a/src/msg/async/crypto_onwire.h
+++ b/src/msg/async/crypto_onwire.h
@@ -95,7 +95,7 @@ public:
   // Transmitter can append extra bytes of ciphertext at the -final step.
   // This method return how much was added, and thus let client translate
   // plaintext size into ciphertext size to grab from wire.
-  virtual std::uint32_t get_extra_size_at_final() = 0;
+  virtual uint32_t get_extra_size_at_final() = 0;
 
   // Instance of RxHandler must be reset before doing any decrypt-update
   // step. This applies also to situation when decrypt-final was already
--- a/src/common/Cycles.h
+++ b/src/common/Cycles.h
@@ -29,8 +29,9 @@
  */
 
 
-#ifndef CEPH_CYCLES_H
-#define CEPH_CYCLES_H
+#pragma once
+
+#include <cstdint>
 
 /**
  * This class provides static methods that read the fine-grain CPU
@@ -112,4 +113,3 @@ private:
   }
 };
 
-#endif  // CEPH_CYCLES_H
--- a/src/test/mon/test_log_rss_usage.cc
+++ b/src/test/mon/test_log_rss_usage.cc
@@ -5,6 +5,7 @@
 #include <string>
 #include <iostream>
 #include <fstream>
+#include <cstdint>
 #include <stdlib.h>
 #include <stdio.h>
 #include <unistd.h>
--- a/src/librbd/api/PoolMetadata.h
+++ b/src/librbd/api/PoolMetadata.h
@@ -9,6 +9,7 @@
 
 #include <map>
 #include <string>
+#include <cstdint>
 
 namespace librbd {
 
--- a/src/rocksdb/db/compaction_iteration_stats.h
+++ b/src/rocksdb/db/compaction_iteration_stats.h
@@ -5,6 +5,8 @@
 
 #pragma once
 
+#include <cstdint>
+
 struct CompactionIterationStats {
   // Compaction statistics
 
--- a/src/rocksdb/table/data_block_hash_index.h
+++ b/src/rocksdb/table/data_block_hash_index.h
@@ -7,6 +7,7 @@
 
 #include <string>
 #include <vector>
+#include <cstdint>
 
 #include "rocksdb/slice.h"
 
--- a/src/rocksdb/util/string_util.h
+++ b/src/rocksdb/util/string_util.h
@@ -10,6 +10,7 @@
 #include <string>
 #include <unordered_map>
 #include <vector>
+#include <cstdint>
 
 namespace rocksdb {
 
--- a/src/rocksdb/include/rocksdb/utilities/checkpoint.h
+++ b/src/rocksdb/include/rocksdb/utilities/checkpoint.h
@@ -9,6 +9,7 @@
 #ifndef ROCKSDB_LITE
 
 #include <string>
+#include <cstdint>
 #include "rocksdb/status.h"
 
 namespace rocksdb {
diff --git a/src/include/ceph_features.h b/src/include/ceph_features.h
index 9f3c012f7be..433fbd40f44 100644
--- a/src/include/ceph_features.h
+++ b/src/include/ceph_features.h
@@ -2,6 +2,7 @@
 #define __CEPH_FEATURES
 
 #include "sys/types.h"
+#include <cstdint>
 
 /*
  * Each time we reclaim bits for reuse we need to specify another
